<?xml version="1.0" encoding="UTF-8"?>
<cdp>
 <clojure namespace="vinzi.cdp.ns.cdm">
  (use 'clojure.tools.logging
       'vinzi.cdm.cdm-main)
       
  
  (def databaseCfg {:database_interface "sql"   ;; other option is "hibernate"
                    :db {:classname     "org.postgresql.Driver"
                         :subprotocol   "postgresql",
                         :db-host		"localhost"
                         :db-port		"5432"
                         :db-name		"cdm"
                         :user			"tos"
                         :password		"tos-user"
                         }})
  
	     
 </clojure>


  <action
     accessId="initialize"
     description="Initialize the system."
     >
	<clojure>
	(initialize)
	</clojure>
   <params>
   </params>
 </action>



  <action
     accessId="jqGetDocRoot"
     description="Get the docRoot (base of the pentaho solution folder in the file-system)."
     >
	<clojure>
	(get-doc-root)
	</clojure>
   <params>
   </params>
 </action>



  <action
     accessId="genFileView"
     description="Generate data to show the files in a viewer."
     >
	<clojure>
	(genFileView params)
	</clojure>
   <params>
     <param id="dir"/>
   </params>
 </action>


  <action
     accessId="process-jsonMgt-command"
     description="Process a jsonMgt-command."
     >
	<clojure>
	(process-jsonMgt-command params)
	</clojure>
   <params>
      <param id="action"/>
      <param id="source"  default=""/>
      <param id="destinations" default=""/>
      <param id="msg" default=""/>
   </params>
 </action>




  <action
     accessId="showTable"
     description="generate data to show a table."
     >
	<clojure>
	(fn [params]
	   (info "genFileView still needs to be implemented")
	  "to be implemented"
    )
	</clojure>
   <params>
   </params>
 </action>






</cdp>
